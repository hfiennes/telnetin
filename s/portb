;                    _____________________________________________
;                  [>                                             <]
;Project           [> Modem server                                <]
;Author            [> Hugo Fiennes                                <]
;Date started      [> 04-April-1989                               <]
;                  [>                                             <]
;Module name       [> Time-critical port routines                 <]
;Current version   [> 00.04                                       <]
;Version date      [> 07-January-1993                             <]
;State             [> Unfinished                                  <]
;                  [>                                             <]
;                  [>   This source is COPYRIGHT © 1989-1993 by   <]
;                  [>      Hugo Fiennes of The Serial Port        <]
;                  [>_____________________________________________<]

; SWI values

WriteC        * &00
CLI           * &05
Byte          * &06
SerialOp      * &57
EnterOS       * &16
IntOn         * &13
IntOff        * &14
Vector        * &34

V             * 1:SHL:28
C             * 1:SHL:29
Z             * 1:SHL:30
N             * 1:SHL:31

PutByte       * 0
GetByte       * 1
PutBlock      * 2
GetBlock      * 3
CheckTXBuffer * 4
CheckRXBuffer * 5
FlushTXBuffer * 6
FlushRXBuffer * 7
ControlLines  * 8
ModemControl  * 9
ReadRXErrors  * 10
SendBreak     * 11

XOS_MASK      * &00020000 ; mask to make a swi a RISC OS v-error swi
X             * &20000

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Register names   Modified for new call standard (GOD acorn, I wish you'd
;                  stop chaging your mind...)
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lk RN 14
pc RN 15

R0 RN 0
R1 RN 1
R2 RN 2
R3 RN 3
R4 RN 4
R5 RN 5
R6 RN 6
R7 RN 7
R8 RN 8
R9 RN 9
R10 RN 10
R11 RN 11
R12 RN 12
R13 RN 13
R14 RN 14
PC RN 15

 AREA |C$$code|, CODE, READONLY

        IMPORT  window_poll
        EXPORT  driver_block
        IMPORT  portnumber

driver_block
        DCD     0

calldriver
        LDR     R1,=portnumber
        LDR     R1,[R1]
        LDR     PC,driver_block

;--- Port select --------------------------------------------------------------

        EXPORT  port_select
port_select
        MOVS    pc,lk

;--- Port DCD -----------------------------------------------------------------

        EXPORT  port_dcd
port_dcd
        STMFD   sp!,{lk}
        MOV     R0,#ModemControl
        BL      calldriver

        TST     R0,#(1<<3)
        MOVEQ   a1,#0
        MOVNE   a1,#-1
        LDMFD   sp!,{pc}^

;--- Port DTR -----------------------------------------------------------------

        EXPORT  port_dtr
port_dtr
        STMFD   sp!,{a1,lk}
        MOV     R0,#ControlLines
        MOV     R2,#-1
        BL      calldriver

        BIC     R2,R0,#1
        LDMFD   sp!,{R0}
        CMP     R0,#0
        ORRNE   R2,R2,#1

        MOV     R0,#ControlLines
        BL      calldriver

        LDMFD   sp!,{pc}^

;--- Port RTS -----------------------------------------------------------------

        EXPORT  port_rts
port_rts
        STMFD   sp!,{a1,lk}
        MOV     R0,#ControlLines
        MOV     R2,#-1
        BL      calldriver

        BIC     R2,R0,#2
        LDMFD   sp!,{R0}
        CMP     R0,#0
        ORRNE   R2,R2,#2

        MOV     R0,#ControlLines
        BL      calldriver

        LDMFD   sp!,{pc}^

;--- Port break ---------------------------------------------------------------

        EXPORT  port_break
port_break
        MOVS    pc,lk

;--- Port RX buffer -----------------------------------------------------------

        EXPORT  port_rxbuffer
port_rxbuffer
        STMFD   sp!,{lk}
        MOV     R0,#CheckRXBuffer
        BL      calldriver
        LDMFD   sp!,{pc}^

;--- Port TX buffer -----------------------------------------------------------

        EXPORT  port_txbuffer
port_txbuffer
        STMFD   sp!,{lk}
        MOV     R0,#CheckTXBuffer
        BL      calldriver
        LDMFD   sp!,{pc}^

;--- Port RX ------------------------------------------------------------------

        EXPORT port_rx
port_rx
        STMFD   sp!,{lk}
        MOV     R0,#GetByte
        BL      calldriver
        LDMFD   sp!,{pc}^

;--- Port TX ------------------------------------------------------------------

        EXPORT  port_tx
port_tx
        STMFD   sp!,{lk}
        MOV     R2,a1
        MOV     R0,#PutByte
        BL      calldriver
        LDMFD   sp!,{pc}^

;--- Port TXwait --------------------------------------------------------------

        EXPORT  port_txw
port_txw
        STMFD   sp!,{v1-v2,lk}
        MOV     v1,a1             ; Save it away for a while
port_txw2
        MOV     R2,v1
        MOV     R0,#PutByte
        BL      calldriver
        CMP     R0,#0
        LDMEQFD sp!,{v1-v2,pc}^
        BL      window_poll
        B       port_txw2

  ;------------------------------------------------------------------------------

    AREA |C$$data|

|x$dataseg|

    END
